name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  ACTIONS_RUNTIME_TOKEN: true
  ACTIONS_RUNTIME_URL: false
  ACTIONS_RUNNER_DEBUG: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tag
        id: set_tag
        run: echo "tag=model-registry:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t model-registry:${{ github.sha }} .

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Run container
        run: docker run -d -p 8000:8000 --name test_container model-registry:${{ github.sha }}

      - name: Wait for API to become ready
        run: |
          for i in {1..15}; do
            if curl -s http://localhost:8000/models; then
              echo "API is up"
              exit 0
            fi
            echo "Waiting for API..."
            sleep 3
          done
          echo "API failed to start"
          docker logs test_container
          exit 1

      - name: Functional tests (POST /models)
        run: |
          echo "dummy" > model.pkl
          curl -X POST http://localhost:8000/models \
            -F "model_file=@model.pkl" \
            -F "name=test-model" \
            -F "version=1.0" \
            -F "accuracy=0.92" || exit 1

      - name: Functional tests (GET /models)
        run: curl -s http://localhost:8000/models | grep "test-model"

      - name: Functional tests (GET /models/test-model)
        run: curl -s http://localhost:8000/models/test-model | grep "0.92"

      - name: Save container logs
        if: failure()
        run: docker logs test_container > log.txt

      - name: Upload logs artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: log.txt
          retention-days: 30

      - name: Cleanup container
        if: always()
        run: docker rm -f test_container || true

      - name: Remove Docker image
        if: always()
        run: docker rmi model-registry:${{ github.sha }} || true
